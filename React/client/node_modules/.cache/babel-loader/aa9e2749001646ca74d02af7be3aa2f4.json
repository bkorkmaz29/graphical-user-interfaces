{"ast":null,"code":"var _jsxFileName = \"/home/bk/Code/graphical-user-interfaces/React/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, createContext, useContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport UpdateEntry from './UpdateEntry';\nimport Entries from './Entries';\nimport AddEntry from './AddEntry';\nimport AddProject from './AddProject';\nimport Control from './Control';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [showAddEntry, setShowAddEntry] = useState(false);\n  const [showAddProject, setShowAddProject] = useState(false);\n  const [showUpdateEntry, setShowUpdateEntry] = useState(false); //const [projects, setProjects] = useState([])\n  //const [entries, setEntries] = useState([])\n\n  const [entry, setEntry] = useState();\n  const [projectCodes, setProjectCodes] = useState([]);\n  const [dailyEntries, setDailyEntries] = useState([]);\n  const [timeSpent, setTimeSpent] = useState(0);\n  let a = new Date();\n  let newDate = a.toISOString().split('T')[0];\n  const [date, setDate] = useState(newDate);\n  const location = useLocation();\n  const {\n    from\n  } = location.state;\n  console.log(from);\n  useEffect(() => {\n    const fetchData = async () => {\n      const resEntry = await axios(`http://localhost:5000/entries`);\n      const resProject = await axios(`http://localhost:5000/projects`);\n      setDailyEntries(resEntry.data.entries.filter(entry => entry.date === date));\n      setProjectCodes(resProject.data.projects.map(project => project.code));\n      let sumAll = resEntry.data.entries.filter(entry => entry.date === date).map(entry => parseInt(entry.time)).reduce((prev, curr) => prev + curr, 0);\n      setTimeSpent(sumAll);\n    };\n\n    fetchData();\n  }, [date, showAddEntry, showAddProject, showUpdateEntry]);\n\n  const addProject = async project => {\n    setShowAddProject(!showAddProject); //setProjects([...projects, setProjects])\n    //setProjectCodes([ ...projectCodes, project.code])\n\n    axios.post(`http://localhost:5000/projects`, project);\n  };\n\n  const addEntry = async entry => {\n    setShowAddEntry(!showAddEntry);\n    setEntry(entry);\n    let id = uuidv4();\n    let newEntry = { ...entry,\n      date,\n      id\n    }; // setEntries([...entries, newEntry])\n    // setDailyEntries(...dailyEntries, entry);  \n\n    axios.post(`http://localhost:5000/entries`, newEntry);\n  };\n\n  const deleteEntry = async id => {\n    setDailyEntries(dailyEntries.filter(entry => entry.id !== id));\n    axios.delete(`http://localhost:5000/entries/${id}`);\n  };\n\n  const updateEntry = async newEntry => {\n    // console.log(newEntry.id)\n    //setEntries(entries.filter((e) => e.id !== entry.id))\n    //console.log(newEntry)\n    // setEntries([...entries, newEntry])\n    axios.patch(`http://localhost:5000/entries/${newEntry.id}`, {\n      code: newEntry.code,\n      time: newEntry.time,\n      description: newEntry.description\n    });\n    setShowUpdateEntry(!showUpdateEntry);\n  };\n\n  const showUpdate = entry => {\n    setEntry(entry);\n    setShowUpdateEntry(!showUpdateEntry);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center w-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Control, {\n      onAddEntry: () => {\n        setShowAddEntry(!showAddEntry);\n        setShowAddProject(false);\n      },\n      onAddProject: () => {\n        setShowAddProject(!showAddProject);\n        setShowAddEntry(false);\n      },\n      onUpdateEntry: () => {\n        setShowUpdateEntry(!showAddProject);\n        setShowUpdateEntry(false);\n      },\n      onChangeDate: e => setDate(e.target.value),\n      timeSpent: timeSpent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Entries, {\n      entries: dailyEntries,\n      onUpdate: showUpdate,\n      onDelete: deleteEntry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), showAddEntry && /*#__PURE__*/_jsxDEV(AddEntry, {\n      onAddEntry: addEntry,\n      projectCodes: projectCodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), showAddProject && /*#__PURE__*/_jsxDEV(AddProject, {\n      onAddProject: addProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 28\n    }, this), showUpdateEntry && /*#__PURE__*/_jsxDEV(UpdateEntry, {\n      onUpdateEntry: updateEntry,\n      entry: entry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Home, \"qar/qmUx8lVRX4x07g2hfsXs9lE=\", false, function () {\n  return [useLocation];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/bk/Code/graphical-user-interfaces/React/src/components/Home.js"],"names":["useEffect","useState","createContext","useContext","v4","uuidv4","useLocation","axios","UpdateEntry","Entries","AddEntry","AddProject","Control","Navbar","Home","showAddEntry","setShowAddEntry","showAddProject","setShowAddProject","showUpdateEntry","setShowUpdateEntry","entry","setEntry","projectCodes","setProjectCodes","dailyEntries","setDailyEntries","timeSpent","setTimeSpent","a","Date","newDate","toISOString","split","date","setDate","location","from","state","console","log","fetchData","resEntry","resProject","data","entries","filter","projects","map","project","code","sumAll","parseInt","time","reduce","prev","curr","addProject","post","addEntry","id","newEntry","deleteEntry","delete","updateEntry","patch","description","showUpdate","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState, createContext, useContext } from 'react'\nimport { v4 as uuidv4 } from 'uuid';\nimport { useLocation } from 'react-router-dom'\nimport axios from 'axios';\n\nimport UpdateEntry from './UpdateEntry';\nimport Entries from './Entries';\nimport AddEntry from './AddEntry';\nimport AddProject from './AddProject';\nimport Control from './Control';\nimport Navbar from './Navbar';\n\n\nconst Home = () => {\n\n    const [showAddEntry, setShowAddEntry] = useState(false)\n    const [showAddProject, setShowAddProject] = useState(false)\n    const [showUpdateEntry, setShowUpdateEntry] = useState(false)\n    //const [projects, setProjects] = useState([])\n    //const [entries, setEntries] = useState([])\n    const [entry, setEntry] = useState()\n    const [projectCodes, setProjectCodes] = useState([])\n    const [dailyEntries, setDailyEntries] = useState([])\n    const [timeSpent, setTimeSpent] = useState(0)\n    let a = new Date();\n    let newDate = a.toISOString().split('T')[0];\n    const [date, setDate] = useState(newDate);\n\n    const location = useLocation()\n    const { from } = location.state\n    console.log(from);\n\n    useEffect(() => {\n        const fetchData = async () => {\n          const resEntry = await axios(\n            `http://localhost:5000/entries`\n          );\n          const resProject = await axios(\n            `http://localhost:5000/projects`\n          );\n          setDailyEntries(resEntry.data.entries.filter((entry) => entry.date === date));\n          setProjectCodes(resProject.data.projects.map((project) => project.code));\n          let sumAll = resEntry.data.entries.filter((entry) => entry.date === date).map(entry => parseInt(entry.time)).reduce((prev, curr) => prev + curr, 0);\n          setTimeSpent(sumAll);\n        };\n    \n        fetchData();\n      }, [date, showAddEntry, showAddProject, showUpdateEntry]);\n    \n\n    const addProject = async (project) => {\n        setShowAddProject(!showAddProject)\n        //setProjects([...projects, setProjects])\n        //setProjectCodes([ ...projectCodes, project.code])\n    \n        axios.post(`http://localhost:5000/projects`, project)\n      }\n    \n      const addEntry = async (entry) => {\n        setShowAddEntry(!showAddEntry);\n        setEntry(entry);\n        let id = uuidv4();\n        let newEntry = { ...entry, date, id }\n    \n    \n        // setEntries([...entries, newEntry])\n        // setDailyEntries(...dailyEntries, entry);  \n        axios.post(`http://localhost:5000/entries`, newEntry)\n      }\n    \n      const deleteEntry = async (id) => {\n        setDailyEntries(dailyEntries.filter((entry) => entry.id !== id))\n        axios.delete(`http://localhost:5000/entries/${id}`)\n      }\n    \n      const updateEntry = async (newEntry) => {\n        // console.log(newEntry.id)\n        //setEntries(entries.filter((e) => e.id !== entry.id))\n    \n        //console.log(newEntry)\n        // setEntries([...entries, newEntry])\n        axios.patch(`http://localhost:5000/entries/${newEntry.id}`, { code: newEntry.code, time: newEntry.time, description: newEntry.description })\n        setShowUpdateEntry(!showUpdateEntry);\n      }\n    \n      const showUpdate = (entry) => {\n        setEntry(entry)\n        setShowUpdateEntry(!showUpdateEntry);\n    \n    \n      }\n\n\n\n\n    return <div className=\"flex flex-col justify-center w-screen\">\n        <Navbar />\n        <Control\n            onAddEntry={() => {\n                setShowAddEntry(!showAddEntry);\n                setShowAddProject(false);\n            }}\n            onAddProject={() => {\n                setShowAddProject(!showAddProject);\n                setShowAddEntry(false);\n            }}\n            onUpdateEntry={() => {\n                setShowUpdateEntry(!showAddProject);\n                setShowUpdateEntry(false);\n            }}\n            onChangeDate={(e) => setDate(e.target.value)}\n            timeSpent={timeSpent}\n\n        />\n        \n        <Entries\n            entries={dailyEntries}\n            onUpdate={showUpdate}\n            onDelete={deleteEntry}\n        />\n      \n\n        {showAddEntry && (\n            <AddEntry\n                onAddEntry={addEntry}\n                projectCodes={projectCodes}\n            />\n        )}\n        {showAddProject && <AddProject onAddProject={addProject} />}\n        {showUpdateEntry && (\n            <UpdateEntry onUpdateEntry={updateEntry} entry={entry} />\n        )}\n\n\n\n\n\n    </div>;\n};\n\nexport default Home;\n\n\n"]},"metadata":{},"sourceType":"module"}