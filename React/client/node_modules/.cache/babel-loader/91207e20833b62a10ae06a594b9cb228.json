{"ast":null,"code":"var _jsxFileName = \"/home/bk/Code/graphical-user-interfaces/React/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from './components/Header';\nimport UpdateEntry from './components/UpdateEntry';\nimport Entries from './components/Entries';\nimport AddEntry from './components/AddEntry';\nimport AddProject from './components/AddProject';\nimport Control from './components/Control';\nimport Footer from './components/Footer';\nimport Sidebar from './components/Sidebar';\nimport Navbar from './components/Navbar';\nimport './App.css';\nimport TimeSpent from './components/TimeSpent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddEntry, setShowAddEntry] = useState(false);\n  const [showAddProject, setShowAddProject] = useState(false);\n  const [showUpdateEntry, setShowUpdateEntry] = useState(false);\n  const [projects, setProjects] = useState([]); //const [entries, setEntries] = useState([])\n\n  const [entry, setEntry] = useState();\n  const [projectCodes, setProjectCodes] = useState([]);\n  const [dailyEntries, setDailyEntries] = useState([]);\n  const [timeSpent, setTimeSpent] = useState(0);\n  let a = new Date();\n  let newDate = a.toISOString().split('T')[0];\n  const [date, setDate] = useState(newDate);\n  /*\n      useEffect(() => {\n         axios \n          .get(\"http://localhost:5000/entries\")\n          .then((res) => {\n            setDailyEntries(res.data.filter((entry) => entry.date === date));          \n          })\n          .catch((err) => {\n            console.log(err);\n          })\n          \n      }, []);\n  \n      useEffect(() => {\n        axios \n         .get(\"http://localhost:5000/entries\")\n         .get(\"http://localhost:5000/projects\")\n         .then((res) => {\n           setDailyEntries(res.data.filter((entry) => entry.date === date));    \n           setProjects(res.data);\n           setProjectCodes(projects.map(project => project.code));      \n         })\n         .catch((err) => {\n           console.log(err);\n         })\n         \n     }, [date]);*/\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const resEntry = await axios(`http://localhost:5000/entries`);\n      const resProject = await axios(`http://localhost:5000/projects`);\n      setDailyEntries(resEntry.data.filter(entry => entry.date === date));\n      setProjectCodes(resProject.data.map(project => project.code));\n    };\n\n    fetchData();\n  }, [date, showAddEntry]);\n  /*\n      useEffect(() => {\n  \n  \n           let sumAll = dailyEntries.map(entry => parseInt(entry.time)).reduce((prev, curr) => prev + curr, 0);\n           setTimeSpent(sumAll);\n  \n           \n  \n  \n     }, []);\n  \n  \n  \n  \n  useEffect(() => {\n    \n    \n    return () => {\n      console.log(\"done daily\")\n    }\n  },[])*/\n\n  const addProject = async project => {\n    setShowAddProject(!showAddProject); //setProjects([...projects, setProjects])\n    //setProjectCodes([ ...projectCodes, project.code])\n\n    axios.post(`http://localhost:5000/projects`, project);\n  };\n\n  const addEntry = async entry => {\n    setShowAddEntry(!showAddEntry);\n    setEntry(entry);\n    let id = uuidv4();\n    let newEntry = { ...entry,\n      date,\n      id\n    }; // setEntries([...entries, newEntry])\n    // setDailyEntries(...dailyEntries, entry);  \n\n    axios.post(`http://localhost:5000/entries`, newEntry);\n  };\n\n  const deleteEntry = async id => {\n    setDailyEntries(dailyEntries.filter(entry => entry.id !== id));\n    axios.delete(`http://localhost:5000/entries/${id}`);\n  };\n\n  const updateEntry = async newEntry => {\n    // console.log(newEntry.id)\n    //setEntries(entries.filter((e) => e.id !== entry.id))\n    //console.log(newEntry)\n    // setEntries([...entries, newEntry])\n    axios.patch(`http://localhost:5000/entries/${newEntry.id}`, {\n      code: newEntry.code,\n      time: newEntry.time,\n      description: newEntry.description\n    });\n    setShowUpdateEntry(!showUpdateEntry);\n  };\n\n  const showUpdate = entry => {\n    setEntry(entry);\n    setShowUpdateEntry(!showUpdateEntry);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-start w-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col justify-center items-center basis-5/6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"basis-1/4\",\n          children: [/*#__PURE__*/_jsxDEV(Control, {\n            onAddEntry: () => {\n              setShowAddEntry(!showAddEntry);\n              setShowAddProject(false);\n            },\n            onAddProject: () => {\n              setShowAddProject(!showAddProject);\n              setShowAddEntry(false);\n            },\n            onUpdateEntry: () => {\n              setShowUpdateEntry(!showAddProject);\n              setShowUpdateEntry(false);\n            },\n            onChangeDate: e => setDate(e.target.value),\n            timeSpent: timeSpent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [showAddEntry && /*#__PURE__*/_jsxDEV(AddEntry, {\n                  onAddEntry: addEntry,\n                  projectCodes: projectCodes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, this), showAddProject && /*#__PURE__*/_jsxDEV(AddProject, {\n                  onAddProject: addProject\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 40\n                }, this), showUpdateEntry && /*#__PURE__*/_jsxDEV(UpdateEntry, {\n                  onUpdateEntry: updateEntry,\n                  entry: entry\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Entries, {\n          entries: dailyEntries,\n          onUpdate: showUpdate,\n          onDelete: deleteEntry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/i+daC4L9c7nSiIU6Da8ii94wgk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bk/Code/graphical-user-interfaces/React/src/App.js"],"names":["useEffect","useState","v4","uuidv4","BrowserRouter","Router","Routes","Route","axios","Header","UpdateEntry","Entries","AddEntry","AddProject","Control","Footer","Sidebar","Navbar","TimeSpent","App","showAddEntry","setShowAddEntry","showAddProject","setShowAddProject","showUpdateEntry","setShowUpdateEntry","projects","setProjects","entry","setEntry","projectCodes","setProjectCodes","dailyEntries","setDailyEntries","timeSpent","setTimeSpent","a","Date","newDate","toISOString","split","date","setDate","fetchData","resEntry","resProject","data","filter","map","project","code","addProject","post","addEntry","id","newEntry","deleteEntry","delete","updateEntry","patch","time","description","showUpdate","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Header from './components/Header';\nimport UpdateEntry from './components/UpdateEntry';\nimport Entries from './components/Entries';\nimport AddEntry from './components/AddEntry';\nimport AddProject from './components/AddProject';\nimport Control from './components/Control';\nimport Footer from './components/Footer';\nimport Sidebar from './components/Sidebar';\nimport Navbar from './components/Navbar';\nimport './App.css'\nimport TimeSpent from './components/TimeSpent';\n\n\n\nconst App = () => {\n  const [showAddEntry, setShowAddEntry] = useState(false)\n  const [showAddProject, setShowAddProject] = useState(false)\n  const [showUpdateEntry, setShowUpdateEntry] = useState(false)\n  const [projects, setProjects] = useState([])\n  //const [entries, setEntries] = useState([])\n  const [entry, setEntry] = useState()\n  const [projectCodes, setProjectCodes] = useState([])\n  const [dailyEntries, setDailyEntries] = useState([])\n  const [timeSpent, setTimeSpent] = useState(0)\n  let a = new Date();\n  let newDate = a.toISOString().split('T')[0];\n  const [date, setDate] = useState(newDate);\n \n\n/*\n    useEffect(() => {\n       axios \n        .get(\"http://localhost:5000/entries\")\n        .then((res) => {\n          setDailyEntries(res.data.filter((entry) => entry.date === date));          \n        })\n        .catch((err) => {\n          console.log(err);\n        })\n        \n    }, []);\n\n    useEffect(() => {\n      axios \n       .get(\"http://localhost:5000/entries\")\n       .get(\"http://localhost:5000/projects\")\n       .then((res) => {\n         setDailyEntries(res.data.filter((entry) => entry.date === date));    \n         setProjects(res.data);\n         setProjectCodes(projects.map(project => project.code));      \n       })\n       .catch((err) => {\n         console.log(err);\n       })\n       \n   }, [date]);*/\n\n   useEffect(() => {\n    const fetchData = async () => {\n      const resEntry = await axios(\n        `http://localhost:5000/entries`\n      );\n      const resProject = await axios(\n        `http://localhost:5000/projects`\n      );\n      setDailyEntries(resEntry.data.filter((entry) => entry.date === date));    \n      setProjectCodes(resProject.data.map(project => project.code));   \n       \n    };\n\n    fetchData();\n  }, [date, showAddEntry]);\n\n\n\n/*\n    useEffect(() => {\n\n\n         let sumAll = dailyEntries.map(entry => parseInt(entry.time)).reduce((prev, curr) => prev + curr, 0);\n         setTimeSpent(sumAll);\n\n         \n\n\n   }, []);\n\n\n\n\nuseEffect(() => {\n  \n  \n  return () => {\n    console.log(\"done daily\")\n  }\n},[])*/\n\n\n  const addProject = async (project) => {\n    setShowAddProject(!showAddProject)\n    //setProjects([...projects, setProjects])\n    //setProjectCodes([ ...projectCodes, project.code])\n\n    axios.post(`http://localhost:5000/projects`, project)\n  }\n\n  const addEntry = async (entry) => {\n    setShowAddEntry(!showAddEntry);\n    setEntry(entry);\n    let id = uuidv4();\n    let newEntry = { ...entry, date, id }\n    \n\n   // setEntries([...entries, newEntry])\n   // setDailyEntries(...dailyEntries, entry);  \n    axios.post(`http://localhost:5000/entries`, newEntry)\n  }\n\n  const deleteEntry = async (id) => {\n    setDailyEntries(dailyEntries.filter((entry) => entry.id !== id))\n     axios.delete(`http://localhost:5000/entries/${id}`)\n   }\n\n  const updateEntry = async (newEntry) => {\n   // console.log(newEntry.id)\n    //setEntries(entries.filter((e) => e.id !== entry.id))\n  \n    //console.log(newEntry)\n   // setEntries([...entries, newEntry])\n    axios.patch(`http://localhost:5000/entries/${newEntry.id}`, {code : newEntry.code, time : newEntry.time, description : newEntry.description })\n    setShowUpdateEntry(!showUpdateEntry);\n  }\n\n  const showUpdate = (entry) => {\n    setEntry(entry)\n    setShowUpdateEntry(!showUpdateEntry);\n\n\n  }\n\n  return (\n    <Router>\n      <div className=\"flex flex-col justify-start w-screen\">\n      <Navbar />\n\n        <div className=\"flex flex-col justify-center items-center basis-5/6\">\n          <div className=\"basis-1/4\">\n            <Control\n              onAddEntry={() => {\n                setShowAddEntry(!showAddEntry);\n                setShowAddProject(false);\n              }}\n              onAddProject={() => {\n                setShowAddProject(!showAddProject);\n                setShowAddEntry(false);\n              }}\n              onUpdateEntry={() => {\n                setShowUpdateEntry(!showAddProject);\n                setShowUpdateEntry(false);\n              }}\n              onChangeDate={(e) => setDate(e.target.value)}\n              timeSpent={timeSpent}\n              \n            />\n            <Routes>\n              <Route\n                path=\"/\"\n                element={\n                  <>\n                    {showAddEntry && (\n                      <AddEntry\n                        onAddEntry={addEntry}\n                        projectCodes={projectCodes}\n                      />\n                    )}\n                    {showAddProject && <AddProject onAddProject={addProject} />}\n                    {showUpdateEntry && (\n                      <UpdateEntry onUpdateEntry={updateEntry} entry={entry} />\n                    )}\n                  </>\n                }\n              />\n            </Routes>\n          </div>\n          <Entries\n            entries={dailyEntries}\n            onUpdate={showUpdate}\n            onDelete={deleteEntry}\n          />\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}