{"ast":null,"code":"var _jsxFileName = \"/home/bk/Code/graphical-user-interfaces/React/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, createContext, useContext } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport UpdateEntry from './components/UpdateEntry';\nimport Entries from './components/Entries';\nimport AddEntry from './components/AddEntry';\nimport AddProject from './components/AddProject';\nimport Control from './components/Control';\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\nimport Login from './Login';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [user, setUser] = useState('');\n  const [showAddEntry, setShowAddEntry] = useState(false);\n  const [showAddProject, setShowAddProject] = useState(false);\n  const [showUpdateEntry, setShowUpdateEntry] = useState(false); //const [projects, setProjects] = useState([])\n  //const [entries, setEntries] = useState([])\n\n  const [entry, setEntry] = useState();\n  const [projectCodes, setProjectCodes] = useState([]);\n  const [dailyEntries, setDailyEntries] = useState([]);\n  const [timeSpent, setTimeSpent] = useState(0);\n  let a = new Date();\n  let newDate = a.toISOString().split('T')[0];\n  const [date, setDate] = useState(newDate);\n  /*\n      useEffect(() => {\n         axios \n          .get(\"http://localhost:5000/entries\")\n          .then((res) => {\n            setDailyEntries(res.data.filter((entry) => entry.date === date));          \n          })\n          .catch((err) => {\n            console.log(err);\n          })\n          \n      }, []);\n  \n      useEffect(() => {\n        axios \n         .get(\"http://localhost:5000/entries\")\n         .get(\"http://localhost:5000/projects\")\n         .then((res) => {\n           setDailyEntries(res.data.filter((entry) => entry.date === date));    \n           setProjects(res.data);\n           setProjectCodes(projects.map(project => project.code));      \n         })\n         .catch((err) => {\n           console.log(err);\n         })\n         \n     }, [date]);*/\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const resEntry = await axios(`http://localhost:5000/entries`);\n      const resProject = await axios(`http://localhost:5000/projects`);\n      setDailyEntries(resEntry.data.entries.filter(entry => entry.date === date));\n      setProjectCodes(resProject.data.projects.map(project => project.code));\n      let sumAll = resEntry.data.entries.filter(entry => entry.date === date).map(entry => parseInt(entry.time)).reduce((prev, curr) => prev + curr, 0);\n      setTimeSpent(sumAll);\n    };\n\n    fetchData();\n  }, [date, showAddEntry, showAddProject, showUpdateEntry]);\n  /*\n      useEffect(() => {\n  \n  \n           let sumAll = dailyEntries.map(entry => parseInt(entry.time)).reduce((prev, curr) => prev + curr, 0);\n           setTimeSpent(sumAll);\n  \n           \n  \n  \n     }, []);\n  \n  \n  \n  \n  useEffect(() => {\n    \n    \n    return () => {\n      console.log(\"done daily\")\n    }\n  },[])*/\n\n  const addProject = async project => {\n    setShowAddProject(!showAddProject); //setProjects([...projects, setProjects])\n    //setProjectCodes([ ...projectCodes, project.code])\n\n    axios.post(`http://localhost:5000/projects`, project);\n  };\n\n  const addEntry = async entry => {\n    setShowAddEntry(!showAddEntry);\n    setEntry(entry);\n    let id = uuidv4();\n    let newEntry = { ...entry,\n      date,\n      id\n    }; // setEntries([...entries, newEntry])\n    // setDailyEntries(...dailyEntries, entry);  \n\n    axios.post(`http://localhost:5000/entries`, newEntry);\n  };\n\n  const deleteEntry = async id => {\n    setDailyEntries(dailyEntries.filter(entry => entry.id !== id));\n    axios.delete(`http://localhost:5000/entries/${id}`);\n  };\n\n  const updateEntry = async newEntry => {\n    // console.log(newEntry.id)\n    //setEntries(entries.filter((e) => e.id !== entry.id))\n    //console.log(newEntry)\n    // setEntries([...entries, newEntry])\n    axios.patch(`http://localhost:5000/entries/${newEntry.id}`, {\n      code: newEntry.code,\n      time: newEntry.time,\n      description: newEntry.description\n    });\n    setShowUpdateEntry(!showUpdateEntry);\n  };\n\n  const showUpdate = entry => {\n    setEntry(entry);\n    setShowUpdateEntry(!showUpdateEntry);\n  };\n\n  const handleName = username => {\n    setUser(username);\n    console.log(user);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-start w-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col justify-center items-center basis-5/6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"basis-1/4\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Login, {\n                onUsername: handleName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/Home\",\n              element: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Control, {\n                  onAddEntry: () => {\n                    setShowAddEntry(!showAddEntry);\n                    setShowAddProject(false);\n                  },\n                  onAddProject: () => {\n                    setShowAddProject(!showAddProject);\n                    setShowAddEntry(false);\n                  },\n                  onUpdateEntry: () => {\n                    setShowUpdateEntry(!showAddProject);\n                    setShowUpdateEntry(false);\n                  },\n                  onChangeDate: e => setDate(e.target.value),\n                  timeSpent: timeSpent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Entries, {\n                  entries: dailyEntries,\n                  onUpdate: showUpdate,\n                  onDelete: deleteEntry\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this), showAddEntry && /*#__PURE__*/_jsxDEV(AddEntry, {\n                  onAddEntry: addEntry,\n                  projectCodes: projectCodes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this), showAddProject && /*#__PURE__*/_jsxDEV(AddProject, {\n                  onAddProject: addProject\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 40\n                }, this), showUpdateEntry && /*#__PURE__*/_jsxDEV(UpdateEntry, {\n                  onUpdateEntry: updateEntry,\n                  entry: entry\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"f5tX/7fD99DG4TDXnF3Wk1Ivd9U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bk/Code/graphical-user-interfaces/React/src/App.js"],"names":["useEffect","useState","createContext","useContext","v4","uuidv4","BrowserRouter","Router","Routes","Route","axios","UpdateEntry","Entries","AddEntry","AddProject","Control","Footer","Navbar","Login","App","user","setUser","showAddEntry","setShowAddEntry","showAddProject","setShowAddProject","showUpdateEntry","setShowUpdateEntry","entry","setEntry","projectCodes","setProjectCodes","dailyEntries","setDailyEntries","timeSpent","setTimeSpent","a","Date","newDate","toISOString","split","date","setDate","fetchData","resEntry","resProject","data","entries","filter","projects","map","project","code","sumAll","parseInt","time","reduce","prev","curr","addProject","post","addEntry","id","newEntry","deleteEntry","delete","updateEntry","patch","description","showUpdate","handleName","username","console","log","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState, createContext, useContext } from 'react'\nimport { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\n\nimport UpdateEntry from './components/UpdateEntry';\nimport Entries from './components/Entries';\nimport AddEntry from './components/AddEntry';\nimport AddProject from './components/AddProject';\nimport Control from './components/Control';\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\nimport Login from './Login'\nimport './App.css'\n\n\n\n\nconst App = () => {\n  const [user, setUser] = useState('')\n  const [showAddEntry, setShowAddEntry] = useState(false)\n  const [showAddProject, setShowAddProject] = useState(false)\n  const [showUpdateEntry, setShowUpdateEntry] = useState(false)\n  //const [projects, setProjects] = useState([])\n  //const [entries, setEntries] = useState([])\n  const [entry, setEntry] = useState()\n  const [projectCodes, setProjectCodes] = useState([])\n  const [dailyEntries, setDailyEntries] = useState([])\n  const [timeSpent, setTimeSpent] = useState(0)\n  let a = new Date();\n  let newDate = a.toISOString().split('T')[0];\n  const [date, setDate] = useState(newDate);\n\n\n\n  /*\n      useEffect(() => {\n         axios \n          .get(\"http://localhost:5000/entries\")\n          .then((res) => {\n            setDailyEntries(res.data.filter((entry) => entry.date === date));          \n          })\n          .catch((err) => {\n            console.log(err);\n          })\n          \n      }, []);\n  \n      useEffect(() => {\n        axios \n         .get(\"http://localhost:5000/entries\")\n         .get(\"http://localhost:5000/projects\")\n         .then((res) => {\n           setDailyEntries(res.data.filter((entry) => entry.date === date));    \n           setProjects(res.data);\n           setProjectCodes(projects.map(project => project.code));      \n         })\n         .catch((err) => {\n           console.log(err);\n         })\n         \n     }, [date]);*/\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const resEntry = await axios(\n        `http://localhost:5000/entries`\n      );\n      const resProject = await axios(\n        `http://localhost:5000/projects`\n      );\n      setDailyEntries(resEntry.data.entries.filter((entry) => entry.date === date));\n      setProjectCodes(resProject.data.projects.map((project) => project.code));\n      let sumAll = resEntry.data.entries.filter((entry) => entry.date === date).map(entry => parseInt(entry.time)).reduce((prev, curr) => prev + curr, 0);\n      setTimeSpent(sumAll);\n    };\n\n    fetchData();\n  }, [date, showAddEntry, showAddProject, showUpdateEntry]);\n\n\n\n  /*\n      useEffect(() => {\n  \n  \n           let sumAll = dailyEntries.map(entry => parseInt(entry.time)).reduce((prev, curr) => prev + curr, 0);\n           setTimeSpent(sumAll);\n  \n           \n  \n  \n     }, []);\n  \n  \n  \n  \n  useEffect(() => {\n    \n    \n    return () => {\n      console.log(\"done daily\")\n    }\n  },[])*/\n\n\n  const addProject = async (project) => {\n    setShowAddProject(!showAddProject)\n    //setProjects([...projects, setProjects])\n    //setProjectCodes([ ...projectCodes, project.code])\n\n    axios.post(`http://localhost:5000/projects`, project)\n  }\n\n  const addEntry = async (entry) => {\n    setShowAddEntry(!showAddEntry);\n    setEntry(entry);\n    let id = uuidv4();\n    let newEntry = { ...entry, date, id }\n\n\n    // setEntries([...entries, newEntry])\n    // setDailyEntries(...dailyEntries, entry);  \n    axios.post(`http://localhost:5000/entries`, newEntry)\n  }\n\n  const deleteEntry = async (id) => {\n    setDailyEntries(dailyEntries.filter((entry) => entry.id !== id))\n    axios.delete(`http://localhost:5000/entries/${id}`)\n  }\n\n  const updateEntry = async (newEntry) => {\n    // console.log(newEntry.id)\n    //setEntries(entries.filter((e) => e.id !== entry.id))\n\n    //console.log(newEntry)\n    // setEntries([...entries, newEntry])\n    axios.patch(`http://localhost:5000/entries/${newEntry.id}`, { code: newEntry.code, time: newEntry.time, description: newEntry.description })\n    setShowUpdateEntry(!showUpdateEntry);\n  }\n\n  const showUpdate = (entry) => {\n    setEntry(entry)\n    setShowUpdateEntry(!showUpdateEntry);\n\n\n  }\n\n  const handleName = (username) => {\n    setUser(username);\n    console.log(user);\n\n  }\n\n  return (\n    <Router>\n      <div className=\"flex flex-col justify-start w-screen\">\n        <Navbar />\n\n        <div className=\"flex flex-col justify-center items-center basis-5/6\">\n          <div className=\"basis-1/4\">\n\n            <Routes>\n              <Route path='/' element={<Login onUsername={handleName} />} />\n              <Route path=\"/Home\"\n                element={\n                  <>\n                    <Control\n                      onAddEntry={() => {\n                        setShowAddEntry(!showAddEntry);\n                        setShowAddProject(false);\n                      }}\n                      onAddProject={() => {\n                        setShowAddProject(!showAddProject);\n                        setShowAddEntry(false);\n                      }}\n                      onUpdateEntry={() => {\n                        setShowUpdateEntry(!showAddProject);\n                        setShowUpdateEntry(false);\n                      }}\n                      onChangeDate={(e) => setDate(e.target.value)}\n                      timeSpent={timeSpent}\n\n                    />\n\n                    <Entries\n                      entries={dailyEntries}\n                      onUpdate={showUpdate}\n                      onDelete={deleteEntry}\n                    />\n\n\n                    {showAddEntry && (\n                      <AddEntry\n                        onAddEntry={addEntry}\n                        projectCodes={projectCodes}\n                      />\n                    )}\n                    {showAddProject && <AddProject onAddProject={addProject} />}\n                    {showUpdateEntry && (\n                      <UpdateEntry onUpdateEntry={updateEntry} entry={entry} />\n                    )}\n                  </>\n                }\n\n              />\n            </Routes>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}